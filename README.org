#+TITLE: ESPHome Component for SX126X LoRa Radio (sx136x)

* Contents :TOC:
- [[#introduction][Introduction]]
  - [[#hardware][Hardware]]
  - [[#arduino-library][Arduino Library]]
  - [[#testing-and-usage][Testing and Usage]]
- [[#development-comments][Development Comments]]
  - [[#considerations--things-to-fix][Considerations / Things to fix]]
- [[#example-yaml][Example YAML]]
- [[#development][Development]]
  - [[#proposed-yaml][Proposed YAML]]

* Introduction
This repository is "Work in Progress"

The aim is to make the LoRa radio available, in the direct LoRa radio mode of
operation, in ESPHome. The goal is to make the use of SX126X radio chip as easy
and simple as possible, using a configuration in the ESPHome YAML files, with as
many sensible defaults as possible.

A LoRaWAN configuration is not yet available, but would become available as a
separate component.

** Hardware
This component is being developed on the Heltec V3 Development Boards which use
the LoRa SX1262 chip. Namely:

- [[https://heltec.org/project/wifi-lora-32-v3/][Heltec Wifi LoRa 32 (V3)]] - heltec_wifi_kit_32_V3 (in expressif)
- [[https://heltec.org/project/wireless-stick-v3/][Heltec Wireless Stick (V3)]] - heltec_wireless_stick_V3
- [[https://heltec.org/product/wireless-stick-lite-v3/][Heltec Wireless Stick Lite (V3)]] - heltec_wireless_stick_lite_V3
  
At the present, these boards are not listed to be selected in the ESPHome YAML
file (when using the Arduino framework). In order to make these boards work with
the available version of ESPHome, the following YAML is required:

#+begin_src yaml
esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino
#+end_src

The place where these boards are defined in the platform-espessif32 project is
[[https://github.com/platformio/platform-espressif32/tree/develop/boards][here]]. It is hoped that these configurations will be picked up when a new version
of espressif32 is pull into ESPHome.

** Arduino Library
The Arduino library being used is [[https://github.com/beegee-tokyo/SX126x-Arduino][beegee-tokyo/SX126X-Arduino]].

The following header file contains the descriptions of the fields used by the
library:
- https://github.com/beegee-tokyo/SX126x-Arduino/blob/master/src/radio/radio.h

** Testing and Usage
The files *lora-sx126x.yaml* and *secret.yaml* provide a example of how to use the
integration. To use with a working version of ESPHome:

- Edit *lora-sx126x.yaml* and ensure that the correct frequency (and band) is
  being used for your board. This varies from region to region and board to board.

- Edit *secret.yaml* and add your local Wifi details, API and OTA secrets;

then run:

#+begin_src bash
  esphome run lora-sx126x.yaml
#+end_src

* Development Comments
This esphome component currently does some things which are not encouraged by
the ESPHome Core and Component developers.

It is always hoped that this component will become compliant enough to be
included in ESPHome, but in the meantime, it can be included in your ESPHome
build by either cloning this repository locally and adding an external_component
with a local source; or by including the github repository directly as an
external_component. See the [[https://esphome.io/components/external_components.html][External Components]] documentation.

Local source for external component:
#+begin_src yaml
  external_components:
    - source:
        type: local
        path: esphome/components 
      components: ["lora-sx126x"]
#+end_src

and, Github source for external component
#+begin_src yaml
  external_components:
    - source:
      type: git
      url: https://github.com/PaulSchulz/esphome-lora-sx126x
      ref: main
    components: ["lora-sx126x"]
#+end_src

** Considerations / Things to fix
*** Direct use of SPI and SX126x-Arduino libraries
If possible, the SX126x-Arduino library needs to be implemented natively in
ESPHome, to make use of the native ESPHome SPI code.

It is uncertain at the moment whether this component can be used generally with
other devices that use the same SPI interface.

* Example YAML

Proposed example YAML configuration
#+begin_src yaml
  esphome:
    name: "lora-sx126x"
    libraries:
      - "SPI"
      - "Ticker"
      - "SX126x-Arduino"

  ...

  external_components:
    - source:
        type: local
        path: esphome/components
      components: [lora-sx126x]

  ...

  lora-sx126x:
    rf_frequency: 915000000          # Manditory for user to set

  sensor:
    - platform: lora-sx126x
      id: lorarssi
      name: lorarssi                 # Required for publishing into API and HA 

  text_sensor:
    - platform: lora-sx126x
      id: packet_in
      name: packet_in

#+end_src

[[file:doc/images/webserver-screenshot.png]]

* Development
** Proposed YAML

#+begin_src yaml
  sx126x:
    # optional, with sensile defaults, if possible from board id.
    pin_lora_reset: 12
    pin_lora_dio_1: 14
    pin_lora_busy:  13
    pin_lora_nss:    8
    pin_lora_sclk:   9
    pin_lora_miso:  11
    pin_lora_mosi:  10
    radio_txen:     -1
    radio_rxen:     -1
    use_dio2_ant_switch: true
    use_dio3_tcx0:       true
    use_dxo3_ant_switch: false

    # required - depends on region and frequency band being used
    rf_frequency: 915000000
    # optional (sensible defaults)
    tx_output_power:       22
    lora_bandwidth:         0
    lora_spreading_factor:  7
    lora_codingrate:        1
    lora_preamble_length:   8
    lora_symbol_timeout:    0
    lora_fix_length_layload_on: false
    lora_iq_inversion_on:       false
    rx_timeout_value:    3000
    tx_timeout_value:    3000

  text_sensor:
    - platform: sx126x
      id: message
      name: LoRa Message

  # Is there a component for this in ESPHome?
  # Sending a string to a component.
  text_message:
    - platform: sx126x
      id: send_message
      name: Send LoRa Message

  binary_sensor:
    - platform: sx126x
      id: lora_sensor
      name: LoRa Sensor
      on_string:  "@+++"
      off_string: "@---"

  switch:
    - platform: sx126x
      id: lora_switch
      name: LoRa Switch
      on_string: "@+++"
      off_string: "@---"
#+end_src

